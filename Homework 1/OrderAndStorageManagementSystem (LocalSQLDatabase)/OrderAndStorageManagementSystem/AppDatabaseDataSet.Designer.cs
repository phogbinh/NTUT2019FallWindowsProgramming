//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace OrderAndStorageManagementSystem
{


    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("AppDatabaseDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AppDatabaseDataSet : global::System.Data.DataSet
    {

        private ProductsTableDataTable tableProductsTable;

        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public AppDatabaseDataSet()
        {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected AppDatabaseDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context, false)
        {
            if ( ( this.IsBinarySerialized(info, context) == true ) )
            {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ( ( string )( info.GetValue("XmlSchema", typeof(string)) ) );
            if ( ( this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema ) )
            {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ( ( ds.Tables[ "ProductsTable" ] != null ) )
                {
                    base.Tables.Add(new ProductsTableDataTable(ds.Tables[ "ProductsTable" ]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductsTableDataTable ProductsTable
        {
            get
            {
                return this.tableProductsTable;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
        {
            get
            {
                return this._schemaSerializationMode;
            }
            set
            {
                this._schemaSerializationMode = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables
        {
            get
            {
                return base.Tables;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations
        {
            get
            {
                return base.Relations;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet()
        {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone()
        {
            AppDatabaseDataSet cln = ( ( AppDatabaseDataSet )( base.Clone() ) );
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
        {
            if ( ( this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema ) )
            {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ( ( ds.Tables[ "ProductsTable" ] != null ) )
                {
                    base.Tables.Add(new ProductsTableDataTable(ds.Tables[ "ProductsTable" ]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXml(reader);
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
        {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars()
        {
            this.InitVars(true);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable)
        {
            this.tableProductsTable = ( ( ProductsTableDataTable )( base.Tables[ "ProductsTable" ] ) );
            if ( ( initTable == true ) )
            {
                if ( ( this.tableProductsTable != null ) )
                {
                    this.tableProductsTable.InitVars();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass()
        {
            this.DataSetName = "AppDatabaseDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AppDatabaseDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProductsTable = new ProductsTableDataTable();
            base.Tables.Add(this.tableProductsTable);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeProductsTable()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
        {
            if ( ( e.Action == global::System.ComponentModel.CollectionChangeAction.Remove ) )
            {
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            AppDatabaseDataSet ds = new AppDatabaseDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if ( xs.Contains(dsSchema.TargetNamespace) )
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for ( global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ( ( global::System.Xml.Schema.XmlSchema )( schemas.Current ) );
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ( ( s1.Length == s2.Length ) )
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for ( ; ( ( s1.Position != s1.Length )
                                        && ( s1.ReadByte() == s2.ReadByte() ) ); )
                            {
                                ;
                            }
                            if ( ( s1.Position == s1.Length ) )
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ( ( s1 != null ) )
                    {
                        s1.Close();
                    }
                    if ( ( s2 != null ) )
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void ProductsTableRowChangeEventHandler(object sender, ProductsTableRowChangeEvent e);

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductsTableDataTable : global::System.Data.TypedTableBase<ProductsTableRow>
        {

            private global::System.Data.DataColumn columnProductId;

            private global::System.Data.DataColumn columnProductName;

            private global::System.Data.DataColumn columnProductType;

            private global::System.Data.DataColumn columnProductPrice;

            private global::System.Data.DataColumn columnProductDescription;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProductsTableDataTable()
            {
                this.TableName = "ProductsTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ProductsTableDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ( ( table.CaseSensitive != table.DataSet.CaseSensitive ) )
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ( ( table.Locale.ToString() != table.DataSet.Locale.ToString() ) )
                {
                    this.Locale = table.Locale;
                }
                if ( ( table.Namespace != table.DataSet.Namespace ) )
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected ProductsTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProductIdColumn
            {
                get
                {
                    return this.columnProductId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProductNameColumn
            {
                get
                {
                    return this.columnProductName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProductTypeColumn
            {
                get
                {
                    return this.columnProductType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProductPriceColumn
            {
                get
                {
                    return this.columnProductPrice;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProductDescriptionColumn
            {
                get
                {
                    return this.columnProductDescription;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProductsTableRow this[ int index ]
            {
                get
                {
                    return ( ( ProductsTableRow )( this.Rows[ index ] ) );
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ProductsTableRowChangeEventHandler ProductsTableRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ProductsTableRowChangeEventHandler ProductsTableRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ProductsTableRowChangeEventHandler ProductsTableRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ProductsTableRowChangeEventHandler ProductsTableRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddProductsTableRow(ProductsTableRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProductsTableRow AddProductsTableRow(string ProductName, string ProductType, int ProductPrice, string ProductDescription)
            {
                ProductsTableRow rowProductsTableRow = ( ( ProductsTableRow )( this.NewRow() ) );
                object[] columnValuesArray = new object[] {
                        null,
                        ProductName,
                        ProductType,
                        ProductPrice,
                        ProductDescription};
                rowProductsTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductsTableRow);
                return rowProductsTableRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProductsTableRow FindByProductId(int ProductId)
            {
                return ( ( ProductsTableRow )( this.Rows.Find(new object[] {
                            ProductId}) ) );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                ProductsTableDataTable cln = ( ( ProductsTableDataTable )( base.Clone() ) );
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new ProductsTableDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars()
            {
                this.columnProductId = base.Columns[ "ProductId" ];
                this.columnProductName = base.Columns[ "ProductName" ];
                this.columnProductType = base.Columns[ "ProductType" ];
                this.columnProductPrice = base.Columns[ "ProductPrice" ];
                this.columnProductDescription = base.Columns[ "ProductDescription" ];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass()
            {
                this.columnProductId = new global::System.Data.DataColumn("ProductId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductId);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnProductType = new global::System.Data.DataColumn("ProductType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductType);
                this.columnProductPrice = new global::System.Data.DataColumn("ProductPrice", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductPrice);
                this.columnProductDescription = new global::System.Data.DataColumn("ProductDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductDescription);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProductId}, true));
                this.columnProductId.AutoIncrement = true;
                this.columnProductId.AutoIncrementSeed = -1;
                this.columnProductId.AutoIncrementStep = -1;
                this.columnProductId.AllowDBNull = false;
                this.columnProductId.ReadOnly = true;
                this.columnProductId.Unique = true;
                this.columnProductName.MaxLength = 255;
                this.columnProductType.MaxLength = 255;
                this.columnProductDescription.MaxLength = 1000;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProductsTableRow NewProductsTableRow()
            {
                return ( ( ProductsTableRow )( this.NewRow() ) );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new ProductsTableRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(ProductsTableRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ( ( this.ProductsTableRowChanged != null ) )
                {
                    this.ProductsTableRowChanged(this, new ProductsTableRowChangeEvent(( ( ProductsTableRow )( e.Row ) ), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ( ( this.ProductsTableRowChanging != null ) )
                {
                    this.ProductsTableRowChanging(this, new ProductsTableRowChangeEvent(( ( ProductsTableRow )( e.Row ) ), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ( ( this.ProductsTableRowDeleted != null ) )
                {
                    this.ProductsTableRowDeleted(this, new ProductsTableRowChangeEvent(( ( ProductsTableRow )( e.Row ) ), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ( ( this.ProductsTableRowDeleting != null ) )
                {
                    this.ProductsTableRowDeleting(this, new ProductsTableRowChangeEvent(( ( ProductsTableRow )( e.Row ) ), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveProductsTableRow(ProductsTableRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AppDatabaseDataSet ds = new AppDatabaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductsTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if ( xs.Contains(dsSchema.TargetNamespace) )
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for ( global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ( ( global::System.Xml.Schema.XmlSchema )( schemas.Current ) );
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ( ( s1.Length == s2.Length ) )
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for ( ; ( ( s1.Position != s1.Length )
                                            && ( s1.ReadByte() == s2.ReadByte() ) ); )
                                {
                                    ;
                                }
                                if ( ( s1.Position == s1.Length ) )
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ( ( s1 != null ) )
                        {
                            s1.Close();
                        }
                        if ( ( s2 != null ) )
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProductsTableRow : global::System.Data.DataRow
        {

            private ProductsTableDataTable tableProductsTable;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ProductsTableRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableProductsTable = ( ( ProductsTableDataTable )( this.Table ) );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ProductId
            {
                get
                {
                    return ( ( int )( this[ this.tableProductsTable.ProductIdColumn ] ) );
                }
                set
                {
                    this[ this.tableProductsTable.ProductIdColumn ] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProductName
            {
                get
                {
                    try
                    {
                        return ( ( string )( this[ this.tableProductsTable.ProductNameColumn ] ) );
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'ProductsTable\' is DBNull.", e);
                    }
                }
                set
                {
                    this[ this.tableProductsTable.ProductNameColumn ] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProductType
            {
                get
                {
                    try
                    {
                        return ( ( string )( this[ this.tableProductsTable.ProductTypeColumn ] ) );
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductType\' in table \'ProductsTable\' is DBNull.", e);
                    }
                }
                set
                {
                    this[ this.tableProductsTable.ProductTypeColumn ] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ProductPrice
            {
                get
                {
                    try
                    {
                        return ( ( int )( this[ this.tableProductsTable.ProductPriceColumn ] ) );
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductPrice\' in table \'ProductsTable\' is DBNull.", e);
                    }
                }
                set
                {
                    this[ this.tableProductsTable.ProductPriceColumn ] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProductDescription
            {
                get
                {
                    try
                    {
                        return ( ( string )( this[ this.tableProductsTable.ProductDescriptionColumn ] ) );
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductDescription\' in table \'ProductsTable\' is DBNull.", e);
                    }
                }
                set
                {
                    this[ this.tableProductsTable.ProductDescriptionColumn ] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProductNameNull()
            {
                return this.IsNull(this.tableProductsTable.ProductNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProductNameNull()
            {
                this[ this.tableProductsTable.ProductNameColumn ] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProductTypeNull()
            {
                return this.IsNull(this.tableProductsTable.ProductTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProductTypeNull()
            {
                this[ this.tableProductsTable.ProductTypeColumn ] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProductPriceNull()
            {
                return this.IsNull(this.tableProductsTable.ProductPriceColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProductPriceNull()
            {
                this[ this.tableProductsTable.ProductPriceColumn ] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProductDescriptionNull()
            {
                return this.IsNull(this.tableProductsTable.ProductDescriptionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProductDescriptionNull()
            {
                this[ this.tableProductsTable.ProductDescriptionColumn ] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class ProductsTableRowChangeEvent : global::System.EventArgs
        {

            private ProductsTableRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProductsTableRowChangeEvent(ProductsTableRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProductsTableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace OrderAndStorageManagementSystem.AppDatabaseDataSetTableAdapters
{


    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProductsTableTableAdapter : global::System.ComponentModel.Component
    {

        private global::System.Data.SqlClient.SqlDataAdapter _adapter;

        private global::System.Data.SqlClient.SqlConnection _connection;

        private global::System.Data.SqlClient.SqlTransaction _transaction;

        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

        private bool _clearBeforeFill;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public ProductsTableTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
        {
            get
            {
                if ( ( this._adapter == null ) )
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection
        {
            get
            {
                if ( ( this._connection == null ) )
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ( ( this.Adapter.InsertCommand != null ) )
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ( ( this.Adapter.DeleteCommand != null ) )
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ( ( this.Adapter.UpdateCommand != null ) )
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for ( int i = 0; ( i < this.CommandCollection.Length ); i = ( i + 1 ) )
                {
                    if ( ( this.CommandCollection[ i ] != null ) )
                    {
                        ( ( global::System.Data.SqlClient.SqlCommand )( this.CommandCollection[ i ] ) ).Connection = value;
                    }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for ( int i = 0; ( i < this.CommandCollection.Length ); i = ( i + 1 ) )
                {
                    this.CommandCollection[ i ].Transaction = this._transaction;
                }
                if ( ( ( this.Adapter != null )
                            && ( this.Adapter.DeleteCommand != null ) ) )
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if ( ( ( this.Adapter != null )
                            && ( this.Adapter.InsertCommand != null ) ) )
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if ( ( ( this.Adapter != null )
                            && ( this.Adapter.UpdateCommand != null ) ) )
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
        {
            get
            {
                if ( ( this._commandCollection == null ) )
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ProductsTable";
            tableMapping.ColumnMappings.Add("ProductId", "ProductId");
            tableMapping.ColumnMappings.Add("ProductName", "ProductName");
            tableMapping.ColumnMappings.Add("ProductType", "ProductType");
            tableMapping.ColumnMappings.Add("ProductPrice", "ProductPrice");
            tableMapping.ColumnMappings.Add("ProductDescription", "ProductDescription");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ProductsTable] WHERE (([ProductId] = @Original_ProductId) AND ((@IsNull_ProductName = 1 AND [ProductName] IS NULL) OR ([ProductName] = @Original_ProductName)) AND ((@IsNull_ProductType = 1 AND [ProductType] IS NULL) OR ([ProductType] = @Original_ProductType)) AND ((@IsNull_ProductPrice = 1 AND [ProductPrice] IS NULL) OR ([ProductPrice] = @Original_ProductPrice)) AND ((@IsNull_ProductDescription = 1 AND [ProductDescription] IS NULL) OR ([ProductDescription] = @Original_ProductDescription)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductPrice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ProductsTable] ([ProductName], [ProductType], [ProductPrice], [ProductDescription]) VALUES (@ProductName, @ProductType, @ProductPrice, @ProductDescription);
SELECT ProductId, ProductName, ProductType, ProductPrice, ProductDescription FROM ProductsTable WHERE (ProductId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ProductsTable] SET [ProductName] = @ProductName, [ProductType] = @ProductType, [ProductPrice] = @ProductPrice, [ProductDescription] = @ProductDescription WHERE (([ProductId] = @Original_ProductId) AND ((@IsNull_ProductName = 1 AND [ProductName] IS NULL) OR ([ProductName] = @Original_ProductName)) AND ((@IsNull_ProductType = 1 AND [ProductType] IS NULL) OR ([ProductType] = @Original_ProductType)) AND ((@IsNull_ProductPrice = 1 AND [ProductPrice] IS NULL) OR ([ProductPrice] = @Original_ProductPrice)) AND ((@IsNull_ProductDescription = 1 AND [ProductDescription] IS NULL) OR ([ProductDescription] = @Original_ProductDescription)));
SELECT ProductId, ProductName, ProductType, ProductPrice, ProductDescription FROM ProductsTable WHERE (ProductId = @ProductId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductPrice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::OrderAndStorageManagementSystem.Properties.Settings.Default.AppDatabaseConnectionString;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[ 1 ];
            this._commandCollection[ 0 ] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[ 0 ].Connection = this.Connection;
            this._commandCollection[ 0 ].CommandText = "SELECT ProductId, ProductName, ProductType, ProductPrice, ProductDescription FROM" +
                " dbo.ProductsTable";
            this._commandCollection[ 0 ].CommandType = global::System.Data.CommandType.Text;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AppDatabaseDataSet.ProductsTableDataTable dataTable)
        {
            this.Adapter.SelectCommand = this.CommandCollection[ 0 ];
            if ( ( this.ClearBeforeFill == true ) )
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AppDatabaseDataSet.ProductsTableDataTable GetData()
        {
            this.Adapter.SelectCommand = this.CommandCollection[ 0 ];
            AppDatabaseDataSet.ProductsTableDataTable dataTable = new AppDatabaseDataSet.ProductsTableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AppDatabaseDataSet.ProductsTableDataTable dataTable)
        {
            return this.Adapter.Update(dataTable);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AppDatabaseDataSet dataSet)
        {
            return this.Adapter.Update(dataSet, "ProductsTable");
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow)
        {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows)
        {
            return this.Adapter.Update(dataRows);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ProductId, string Original_ProductName, string Original_ProductType, global::System.Nullable<int> Original_ProductPrice, string Original_ProductDescription)
        {
            this.Adapter.DeleteCommand.Parameters[ 0 ].Value = ( ( int )( Original_ProductId ) );
            if ( ( Original_ProductName == null ) )
            {
                this.Adapter.DeleteCommand.Parameters[ 1 ].Value = ( ( object )( 1 ) );
                this.Adapter.DeleteCommand.Parameters[ 2 ].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[ 1 ].Value = ( ( object )( 0 ) );
                this.Adapter.DeleteCommand.Parameters[ 2 ].Value = ( ( string )( Original_ProductName ) );
            }
            if ( ( Original_ProductType == null ) )
            {
                this.Adapter.DeleteCommand.Parameters[ 3 ].Value = ( ( object )( 1 ) );
                this.Adapter.DeleteCommand.Parameters[ 4 ].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[ 3 ].Value = ( ( object )( 0 ) );
                this.Adapter.DeleteCommand.Parameters[ 4 ].Value = ( ( string )( Original_ProductType ) );
            }
            if ( ( Original_ProductPrice.HasValue == true ) )
            {
                this.Adapter.DeleteCommand.Parameters[ 5 ].Value = ( ( object )( 0 ) );
                this.Adapter.DeleteCommand.Parameters[ 6 ].Value = ( ( int )( Original_ProductPrice.Value ) );
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[ 5 ].Value = ( ( object )( 1 ) );
                this.Adapter.DeleteCommand.Parameters[ 6 ].Value = global::System.DBNull.Value;
            }
            if ( ( Original_ProductDescription == null ) )
            {
                this.Adapter.DeleteCommand.Parameters[ 7 ].Value = ( ( object )( 1 ) );
                this.Adapter.DeleteCommand.Parameters[ 8 ].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[ 7 ].Value = ( ( object )( 0 ) );
                this.Adapter.DeleteCommand.Parameters[ 8 ].Value = ( ( string )( Original_ProductDescription ) );
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if ( ( ( this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open )
                        != global::System.Data.ConnectionState.Open ) )
            {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ( ( previousConnectionState == global::System.Data.ConnectionState.Closed ) )
                {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ProductName, string ProductType, global::System.Nullable<int> ProductPrice, string ProductDescription)
        {
            if ( ( ProductName == null ) )
            {
                this.Adapter.InsertCommand.Parameters[ 0 ].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[ 0 ].Value = ( ( string )( ProductName ) );
            }
            if ( ( ProductType == null ) )
            {
                this.Adapter.InsertCommand.Parameters[ 1 ].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[ 1 ].Value = ( ( string )( ProductType ) );
            }
            if ( ( ProductPrice.HasValue == true ) )
            {
                this.Adapter.InsertCommand.Parameters[ 2 ].Value = ( ( int )( ProductPrice.Value ) );
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[ 2 ].Value = global::System.DBNull.Value;
            }
            if ( ( ProductDescription == null ) )
            {
                this.Adapter.InsertCommand.Parameters[ 3 ].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[ 3 ].Value = ( ( string )( ProductDescription ) );
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if ( ( ( this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open )
                        != global::System.Data.ConnectionState.Open ) )
            {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ( ( previousConnectionState == global::System.Data.ConnectionState.Closed ) )
                {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ProductName, string ProductType, global::System.Nullable<int> ProductPrice, string ProductDescription, int Original_ProductId, string Original_ProductName, string Original_ProductType, global::System.Nullable<int> Original_ProductPrice, string Original_ProductDescription, int ProductId)
        {
            if ( ( ProductName == null ) )
            {
                this.Adapter.UpdateCommand.Parameters[ 0 ].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[ 0 ].Value = ( ( string )( ProductName ) );
            }
            if ( ( ProductType == null ) )
            {
                this.Adapter.UpdateCommand.Parameters[ 1 ].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[ 1 ].Value = ( ( string )( ProductType ) );
            }
            if ( ( ProductPrice.HasValue == true ) )
            {
                this.Adapter.UpdateCommand.Parameters[ 2 ].Value = ( ( int )( ProductPrice.Value ) );
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[ 2 ].Value = global::System.DBNull.Value;
            }
            if ( ( ProductDescription == null ) )
            {
                this.Adapter.UpdateCommand.Parameters[ 3 ].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[ 3 ].Value = ( ( string )( ProductDescription ) );
            }
            this.Adapter.UpdateCommand.Parameters[ 4 ].Value = ( ( int )( Original_ProductId ) );
            if ( ( Original_ProductName == null ) )
            {
                this.Adapter.UpdateCommand.Parameters[ 5 ].Value = ( ( object )( 1 ) );
                this.Adapter.UpdateCommand.Parameters[ 6 ].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[ 5 ].Value = ( ( object )( 0 ) );
                this.Adapter.UpdateCommand.Parameters[ 6 ].Value = ( ( string )( Original_ProductName ) );
            }
            if ( ( Original_ProductType == null ) )
            {
                this.Adapter.UpdateCommand.Parameters[ 7 ].Value = ( ( object )( 1 ) );
                this.Adapter.UpdateCommand.Parameters[ 8 ].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[ 7 ].Value = ( ( object )( 0 ) );
                this.Adapter.UpdateCommand.Parameters[ 8 ].Value = ( ( string )( Original_ProductType ) );
            }
            if ( ( Original_ProductPrice.HasValue == true ) )
            {
                this.Adapter.UpdateCommand.Parameters[ 9 ].Value = ( ( object )( 0 ) );
                this.Adapter.UpdateCommand.Parameters[ 10 ].Value = ( ( int )( Original_ProductPrice.Value ) );
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[ 9 ].Value = ( ( object )( 1 ) );
                this.Adapter.UpdateCommand.Parameters[ 10 ].Value = global::System.DBNull.Value;
            }
            if ( ( Original_ProductDescription == null ) )
            {
                this.Adapter.UpdateCommand.Parameters[ 11 ].Value = ( ( object )( 1 ) );
                this.Adapter.UpdateCommand.Parameters[ 12 ].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[ 11 ].Value = ( ( object )( 0 ) );
                this.Adapter.UpdateCommand.Parameters[ 12 ].Value = ( ( string )( Original_ProductDescription ) );
            }
            this.Adapter.UpdateCommand.Parameters[ 13 ].Value = ( ( int )( ProductId ) );
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if ( ( ( this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open )
                        != global::System.Data.ConnectionState.Open ) )
            {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ( ( previousConnectionState == global::System.Data.ConnectionState.Closed ) )
                {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ProductName, string ProductType, global::System.Nullable<int> ProductPrice, string ProductDescription, int Original_ProductId, string Original_ProductName, string Original_ProductType, global::System.Nullable<int> Original_ProductPrice, string Original_ProductDescription)
        {
            return this.Update(ProductName, ProductType, ProductPrice, ProductDescription, Original_ProductId, Original_ProductName, Original_ProductType, Original_ProductPrice, Original_ProductDescription, Original_ProductId);
        }
    }

    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component
    {

        private UpdateOrderOption _updateOrder;

        private ProductsTableTableAdapter _productsTableTableAdapter;

        private bool _backupDataSetBeforeUpdate;

        private global::System.Data.IDbConnection _connection;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder
        {
            get
            {
                return this._updateOrder;
            }
            set
            {
                this._updateOrder = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ProductsTableTableAdapter ProductsTableTableAdapter
        {
            get
            {
                return this._productsTableTableAdapter;
            }
            set
            {
                this._productsTableTableAdapter = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate
        {
            get
            {
                return this._backupDataSetBeforeUpdate;
            }
            set
            {
                this._backupDataSetBeforeUpdate = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection
        {
            get
            {
                if ( ( this._connection != null ) )
                {
                    return this._connection;
                }
                if ( ( ( this._productsTableTableAdapter != null )
                            && ( this._productsTableTableAdapter.Connection != null ) ) )
                {
                    return this._productsTableTableAdapter.Connection;
                }
                return null;
            }
            set
            {
                this._connection = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount
        {
            get
            {
                int count = 0;
                if ( ( this._productsTableTableAdapter != null ) )
                {
                    count = ( count + 1 );
                }
                return count;
            }
        }

        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(AppDatabaseDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
        {
            int result = 0;
            if ( ( this._productsTableTableAdapter != null ) )
            {
                global::System.Data.DataRow[] updatedRows = dataSet.ProductsTable.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if ( ( ( updatedRows != null )
                            && ( 0 < updatedRows.Length ) ) )
                {
                    result = ( result + this._productsTableTableAdapter.Update(updatedRows) );
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }

        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(AppDatabaseDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
        {
            int result = 0;
            if ( ( this._productsTableTableAdapter != null ) )
            {
                global::System.Data.DataRow[] addedRows = dataSet.ProductsTable.Select(null, null, global::System.Data.DataViewRowState.Added);
                if ( ( ( addedRows != null )
                            && ( 0 < addedRows.Length ) ) )
                {
                    result = ( result + this._productsTableTableAdapter.Update(addedRows) );
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }

        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(AppDatabaseDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows)
        {
            int result = 0;
            if ( ( this._productsTableTableAdapter != null ) )
            {
                global::System.Data.DataRow[] deletedRows = dataSet.ProductsTable.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if ( ( ( deletedRows != null )
                            && ( 0 < deletedRows.Length ) ) )
                {
                    result = ( result + this._productsTableTableAdapter.Update(deletedRows) );
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }

        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
        {
            if ( ( ( updatedRows == null )
                        || ( updatedRows.Length < 1 ) ) )
            {
                return updatedRows;
            }
            if ( ( ( allAddedRows == null )
                        || ( allAddedRows.Count < 1 ) ) )
            {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for ( int i = 0; ( i < updatedRows.Length ); i = ( i + 1 ) )
            {
                global::System.Data.DataRow row = updatedRows[ i ];
                if ( ( allAddedRows.Contains(row) == false ) )
                {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }

        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(AppDatabaseDataSet dataSet)
        {
            if ( ( dataSet == null ) )
            {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ( ( dataSet.HasChanges() == false ) )
            {
                return 0;
            }
            if ( ( ( this._productsTableTableAdapter != null )
                        && ( this.MatchTableAdapterConnection(this._productsTableTableAdapter.Connection) == false ) ) )
            {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ( ( workConnection == null ) )
            {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if ( ( ( workConnection.State & global::System.Data.ConnectionState.Broken )
                        == global::System.Data.ConnectionState.Broken ) )
            {
                workConnection.Close();
            }
            if ( ( workConnection.State == global::System.Data.ConnectionState.Closed ) )
            {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ( ( workTransaction == null ) )
            {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if ( this.BackupDataSetBeforeUpdate )
            {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try
            {
                // ---- Prepare for update -----------
                //
                if ( ( this._productsTableTableAdapter != null ) )
                {
                    revertConnections.Add(this._productsTableTableAdapter, this._productsTableTableAdapter.Connection);
                    this._productsTableTableAdapter.Connection = ( ( global::System.Data.SqlClient.SqlConnection )( workConnection ) );
                    this._productsTableTableAdapter.Transaction = ( ( global::System.Data.SqlClient.SqlTransaction )( workTransaction ) );
                    if ( this._productsTableTableAdapter.Adapter.AcceptChangesDuringUpdate )
                    {
                        this._productsTableTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._productsTableTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ( ( this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete ) )
                {
                    result = ( result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows) );
                    result = ( result + this.UpdateInsertedRows(dataSet, allAddedRows) );
                }
                else
                {
                    result = ( result + this.UpdateInsertedRows(dataSet, allAddedRows) );
                    result = ( result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows) );
                }
                result = ( result + this.UpdateDeletedRows(dataSet, allChangedRows) );
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ( ( 0 < allAddedRows.Count ) )
                {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[ allAddedRows.Count ];
                    allAddedRows.CopyTo(rows);
                    for ( int i = 0; ( i < rows.Length ); i = ( i + 1 ) )
                    {
                        global::System.Data.DataRow row = rows[ i ];
                        row.AcceptChanges();
                    }
                }
                if ( ( 0 < allChangedRows.Count ) )
                {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[ allChangedRows.Count ];
                    allChangedRows.CopyTo(rows);
                    for ( int i = 0; ( i < rows.Length ); i = ( i + 1 ) )
                    {
                        global::System.Data.DataRow row = rows[ i ];
                        row.AcceptChanges();
                    }
                }
            }
            catch ( global::System.Exception ex )
            {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if ( this.BackupDataSetBeforeUpdate )
                {
                    global::System.Diagnostics.Debug.Assert(( backupDataSet != null ));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else
                {
                    if ( ( 0 < allAddedRows.Count ) )
                    {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[ allAddedRows.Count ];
                        allAddedRows.CopyTo(rows);
                        for ( int i = 0; ( i < rows.Length ); i = ( i + 1 ) )
                        {
                            global::System.Data.DataRow row = rows[ i ];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally
            {
                if ( workConnOpened )
                {
                    workConnection.Close();
                }
                if ( ( this._productsTableTableAdapter != null ) )
                {
                    this._productsTableTableAdapter.Connection = ( ( global::System.Data.SqlClient.SqlConnection )( revertConnections[ this._productsTableTableAdapter ] ) );
                    this._productsTableTableAdapter.Transaction = null;
                }
                if ( ( 0 < adaptersWithAcceptChangesDuringUpdate.Count ) )
                {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[ adaptersWithAcceptChangesDuringUpdate.Count ];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for ( int i = 0; ( i < adapters.Length ); i = ( i + 1 ) )
                    {
                        global::System.Data.Common.DataAdapter adapter = adapters[ i ];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst)
        {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection)
        {
            if ( ( this._connection != null ) )
            {
                return true;
            }
            if ( ( ( this.Connection == null )
                        || ( inputConnection == null ) ) )
            {
                return true;
            }
            if ( string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal) )
            {
                return true;
            }
            return false;
        }

        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption
        {

            InsertUpdateDelete = 0,

            UpdateInsertDelete = 1,
        }

        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow>
        {

            private global::System.Data.DataRelation _relation;

            private int _childFirst;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst)
            {
                this._relation = relation;
                if ( childFirst )
                {
                    this._childFirst = -1;
                }
                else
                {
                    this._childFirst = 1;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance)
            {
                global::System.Diagnostics.Debug.Assert(( row != null ));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[ row ] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ( ( parent != null )
                            && ( traversedRows.ContainsKey(parent) == false ) );
                )
                {
                    distance = ( distance + 1 );
                    root = parent;
                    traversedRows[ parent ] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ( ( distance == 0 ) )
                {
                    traversedRows.Clear();
                    traversedRows[ row ] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ( ( parent != null )
                                && ( traversedRows.ContainsKey(parent) == false ) );
                    )
                    {
                        distance = ( distance + 1 );
                        root = parent;
                        traversedRows[ parent ] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2)
            {
                if ( object.ReferenceEquals(row1, row2) )
                {
                    return 0;
                }
                if ( ( row1 == null ) )
                {
                    return -1;
                }
                if ( ( row2 == null ) )
                {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if ( object.ReferenceEquals(root1, root2) )
                {
                    return ( this._childFirst * distance1.CompareTo(distance2) );
                }
                else
                {
                    global::System.Diagnostics.Debug.Assert(( ( root1.Table != null )
                                    && ( root2.Table != null ) ));
                    if ( ( root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2) ) )
                    {
                        return -1;
                    }
                    else
                    {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591